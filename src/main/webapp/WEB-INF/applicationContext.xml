<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="/WEB-INF/db.properties"  ignore-unresolvable="true" />
     <bean id="dataSourceDefault" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${hibernate.connection.driver_class}"/>
		<property name="jdbcUrl" value="${hibernate.connection.url}"/>
		<property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idle_test_period}" />
		<property name="preferredTestQuery" value="${hibernate.c3p0.preferredTestQuery}" />
		<property name="maxIdleTime" value="${pool.c3p0.max_idle_time}" />
		<property name="properties">
			<props>
				<prop key="user">${hibernate.connection.username}</prop>
				<prop key="password">${hibernate.connection.password}</prop>
				<prop key="c3p0.acquire_increment">${pool.c3p0.acquire_increment}</prop>
				<prop key="c3p0.max_size">${hibernate.c3p0.max_size}</prop>
				<prop key="c3p0.min_size">${hibernate.c3p0.min_size}</prop>
			</props>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDefault" />
		
		<property name="mappingLocations">
			<list>
				<value>classpath:com/github/cms/bean/*.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="connection.useUnicode">true</prop>
				<prop key="connection.characterEncoding">UTF-8</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames"
			value="WEB-INF/messages/messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<bean id="modulesDao" class="com.github.cms.dao.ModulesDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="userDao" class="com.github.cms.dao.UserDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="groupDao" class="com.github.cms.dao.GroupDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean class="com.github.cms.dao.RoleDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean class="com.github.cms.dao.GroupMemberDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean class="com.github.cms.dao.GroupAuthorityDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
		<bean class="com.github.cms.dao.AuthorityDao">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
		<bean id="modulesService" class="com.github.cms.service.ModuleService"></bean>
	<bean class="com.github.cms.service.GroupMemberService"></bean>
	<bean class="com.github.cms.service.AuthorityService"></bean>
	
	
	<security:http auto-config="true">
	    <security:intercept-url pattern="/sys/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
	 	<security:intercept-url pattern="/**" access="ROLE_USER" />
		<security:form-login login-page='/sys/login'/>
		
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor" />
	</security:http>
	<security:authentication-manager alias="authenticationManager">
  		<security:authentication-provider>
    		<security:jdbc-user-service data-source-ref="dataSourceDefault"/>
  		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="filterSecurityInterceptor" autowire="byType" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager"></property>
		<property name="securityMetadataSource" ref="customSecurityMetadataSource" />
	</bean>
 
	<bean id="customSecurityMetadataSource" class="com.github.cms.controller.CustomFilterInvocationSecurityMetadataSource">
		
	</bean>
	
	<bean id="authenticationUserDetailsService" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
		<property name="userDetailsService" ref="userDetailDao"/>
	</bean>
	<bean id="userDetailDao" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource" ref="dataSourceDefault"/>
	</bean>
	
   
</beans>